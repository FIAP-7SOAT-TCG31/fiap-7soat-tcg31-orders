name: FiapBurgerPayments - CICD

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

env:
  CI: true

jobs:
  build:
    name: 'Build'
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.9'
      - name: Install Dependencies
        run: npm install
      - name: Build
        run: npm run build
  test-unit:
    name: 'Run Unit Tests'
    runs-on: ubuntu-latest
    needs: [build]
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.9'
      - name: Install Dependencies
        run: npm install
      - name: Run Tests
        run: npm run test:cov
  test-integration:
    name: 'Run Integration Tests'
    runs-on: ubuntu-latest
    needs: [build]
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.9'
      - name: Start Docker Dependencies
        run: docker compose up -d
      - name: Install Dependencies
        run: npm install
      - name: Run Tests
        run: npm run test:integration:cov
      - name: Teardown
        run: docker compose down -v
  test-acceptance:
    name: 'Run Acceptance Tests'
    runs-on: ubuntu-latest
    needs: [build]
    timeout-minutes: 10
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20.9'
      - name: Start Docker Dependencies
        run: docker compose up -d
      - name: Install PM2
        run: npm i -g pm2
      - name: Install Dependencies
        run: npm install
      - name: Build the app
        run: npm run build
      - name: Setup environment
        run: cp .env.template .env
      - name: Start the app in background
        run: pm2 start "npm start" --name App
      - name: "[DEBUG] PM2 Logs"
        run: |
          ls -al
          pm2 ps
          pm2 logs App --nostream
      - name: Run Tests
        run: npm run test:acceptance
      - name: Teardown
        run: |
          pm2 delete 0
          docker compose down -v
